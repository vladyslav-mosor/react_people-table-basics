{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","pageName","className","isActive","classNames","NavBar","role","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","name","sex","PersonInfo","people","born","died","motherName","fatherName","useParams","personSlug","mother","find","father","PeopleTable","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasLoadingError","setHasError","hasDataError","setHasDataError","loadPeople","useCallback","loadedPeople","length","useEffect","HomePage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.27d6fbc3.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  pageName: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, pageName }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {pageName}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" pageName=\"Home\" />\n        <PageNavLink to=\"people\" pageName=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { FC } from 'react';\nimport { Person } from '../../types';\n\ntype Props = {\n  person : Person,\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nexport const PersonInfo: FC<Props> = ({\n  person,\n  people,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n  const { personSlug = '' } = useParams();\n\n  const mother = people.find(({ name }) => name === motherName);\n  const father = people.find(({ name }) => name === fatherName);\n\n  return (\n    <tr\n      key={slug}\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            key={person.slug}\n            people={people}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasError] = useState(false);\n  const [hasDataError, setHasDataError] = useState(false);\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const loadedPeople = await getPeople();\n\n      if (!loadedPeople.length) {\n        setHasDataError(true);\n      }\n\n      setPeople(loadedPeople);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasDataError && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {isLoading && (\n            <Loader />\n          )}\n\n          {!hasLoadingError\n          && !hasDataError\n          && !isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}